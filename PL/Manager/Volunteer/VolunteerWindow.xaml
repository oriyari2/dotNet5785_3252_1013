<Window x:Class="PL.Volunteer.VolunteerWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:PL.Volunteer"
        mc:Ignorable="d"
        Title="Volunteer Window" Height="660" Width="400"
        DataContext="{Binding RelativeSource={RelativeSource Mode=Self}}"
        Loaded="Window_Loaded"
        Closed="Window_Closed">

    <!-- Global Resources -->
    <Window.Resources>
        <!-- Styling for Labels -->
        <Style TargetType="Label">
            <!-- Sets default alignment and margin for labels -->
            <Setter Property="HorizontalAlignment" Value="Left" />
            <Setter Property="VerticalAlignment" Value="Center" />
            <Setter Property="Margin" Value="5" />
        </Style>

        <!-- Styling for Input Fields (Controls) -->
        <Style TargetType="Control">
            <!-- Sets default margin, width, and alignment for controls -->
            <Setter Property="Margin" Value="5" />
            <Setter Property="Width" Value="200" />
            <Setter Property="HorizontalAlignment" Value="Left" />
        </Style>
    </Window.Resources>

    <Grid Margin="10,10,10,-3">
        <!-- Grid Definition -->
        <Grid.RowDefinitions>
            <!-- Defines rows for different input fields and buttons -->
            <RowDefinition Height="35" />
            <RowDefinition Height="35" />
            <RowDefinition Height="35" />
            <RowDefinition Height="35" />
            <RowDefinition Height="35" />
            <RowDefinition Height="35" />
            <RowDefinition Height="35" />
            <RowDefinition Height="35" />
            <RowDefinition Height="35" />
            <RowDefinition Height="35" />
            <RowDefinition Height="35" />
            <RowDefinition Height="35" />
            <RowDefinition Height="35" />
            <RowDefinition Height="35" />
            <RowDefinition Height="35" />
            <RowDefinition Height="35" />
            <RowDefinition Height="*" />
        </Grid.RowDefinitions>

        <Grid.ColumnDefinitions>
            <!-- Defines two columns: one smaller for labels and one larger for input fields -->
            <ColumnDefinition Width="1*" />
            <ColumnDefinition Width="2*" />
        </Grid.ColumnDefinitions>

        <!-- Labels and Input Fields for Volunteer details -->
        <Label Grid.Column="0" Content="Id:" />
        <!-- TextBox for Volunteer ID (ReadOnly based on conditions) -->
        <TextBox Grid.Row="0" Grid.Column="1" Text="{Binding CurrentVolunteer.Id,
            Mode=TwoWay, NotifyOnValidationError=true,  ValidatesOnExceptions=true}" 
            IsReadOnly="{Binding ButtonText,Converter={StaticResource ConvertObjIdToTFkey}}" />

        <Label Grid.Row="1" Grid.Column="0" Content="Name:" />
        <!-- TextBox for Volunteer Name -->
        <TextBox Grid.Row="1" Grid.Column="1" Text="{Binding CurrentVolunteer.Name,
            Mode=TwoWay, NotifyOnValidationError=true,  ValidatesOnExceptions=true}" />

        <Label Grid.Row="2" Grid.Column="0" Content="Phone Number:" />
        <!-- TextBox for Phone Number -->
        <TextBox Grid.Row="2" Grid.Column="1" Text="{Binding CurrentVolunteer.PhoneNumber,
            Mode=TwoWay, NotifyOnValidationError=true,  ValidatesOnExceptions=true}" />

        <Label Grid.Row="3" Grid.Column="0" Content="Email:" />
        <!-- TextBox for Email -->
        <TextBox Grid.Row="3" Grid.Column="1" Text="{Binding CurrentVolunteer.Email,
            Mode=TwoWay, NotifyOnValidationError=true,  ValidatesOnExceptions=true}" />

        <Label Grid.Row="4" Grid.Column="0" Content="Password:" />
        <!-- TextBox for Password (ReadOnly based on conditions) -->
        <TextBox Grid.Row="4" Grid.Column="1" Text="{Binding CurrentVolunteer.Password,
            Mode=TwoWay, NotifyOnValidationError=true,  ValidatesOnExceptions=true}" 
            IsReadOnly="{Binding ButtonText,Converter={StaticResource ConvertObjPasswordToTFkey}}" />

        <Label Grid.Row="5" Grid.Column="0" Content="Address:" />
        <!-- TextBox for Address -->
        <TextBox Grid.Row="5" Grid.Column="1" Text="{Binding CurrentVolunteer.Address,
            Mode=TwoWay, NotifyOnValidationError=true,  ValidatesOnExceptions=true}">
            <TextBox.BorderBrush>
            <MultiBinding Converter="{StaticResource CoordinatesValidationConverterkey}">
                <Binding Path="CurrentVolunteer.Address" />
                    <Binding Path="CurrentVolunteer.Latitude" />
                    <Binding Path="CurrentVolunteer.Longitude" />
            </MultiBinding>
        </TextBox.BorderBrush>
        <TextBox.BorderThickness>
            <MultiBinding Converter="{StaticResource BorderThicknessConverterkey}">
                    <Binding Path="CurrentVolunteer.Address" />
                    <Binding Path="CurrentVolunteer.Latitude" />
                    <Binding Path="CurrentVolunteer.Longitude" />
            </MultiBinding>
        </TextBox.BorderThickness>

        </TextBox>


        <Label Grid.Row="6" Grid.Column="0" Content="Role:" />
        <!-- ComboBox for selecting Role -->
        <ComboBox Grid.Row="6" Grid.Column="1" ItemsSource="{Binding Source={StaticResource RoleTypeCollectionKey}}" 
        SelectedValue="{Binding CurrentVolunteer.Role, Mode=TwoWay, NotifyOnValidationError=true, ValidatesOnExceptions=true}" />

        <Label Grid.Row="7" Grid.Column="0" Content="Active:" />
        <!-- CheckBox for Active Status -->
        <CheckBox Grid.Row="7" Grid.Column="1" IsChecked="{Binding CurrentVolunteer.Active, Mode=TwoWay, NotifyOnValidationError=true, 
            ValidatesOnExceptions=true}" IsEnabled="{Binding CurrentVolunteer.IsProgress , Converter={StaticResource ActiveCheckboxConverterkey }}"/>

        <Label Grid.Row="8" Grid.Column="0" Content="Max Distance:" />
        <!-- TextBox for Maximum Distance -->
        <TextBox Grid.Row="8" Grid.Column="1" Text="{Binding CurrentVolunteer.MaxDistance,
            Mode=TwoWay, NotifyOnValidationError=true,  ValidatesOnExceptions=true}" />

        <Label Grid.Row="9" Grid.Column="0" Content="Distance Type:" />
        <!-- ComboBox for Distance Type (Disabled) -->
        <ComboBox Grid.Row="9" Grid.Column="1" ItemsSource="{Binding Source={StaticResource DistanceTypeCollectionKey}}" 
        SelectedValue="{Binding CurrentVolunteer.TheDistanceType, Mode=TwoWay, NotifyOnValidationError=true, 
        ValidatesOnExceptions=true}" IsEnabled="False" />

        <Label Grid.Row="10" Grid.Column="0" Content="Total Handled:" />
        <!-- TextBox for Total Handled (ReadOnly) -->
        <TextBox Grid.Row="10" Grid.Column="1" Text="{Binding CurrentVolunteer.TotalHandled,
            Mode=TwoWay, NotifyOnValidationError=true,  ValidatesOnExceptions=true}" IsReadOnly="True" />

        <Label Grid.Row="11" Grid.Column="0" Content="Total Canceled:" />
        <!-- TextBox for Total Canceled (ReadOnly) -->
        <TextBox Grid.Row="11" Grid.Column="1" Text="{Binding CurrentVolunteer.TotalCanceled,
            Mode=TwoWay, NotifyOnValidationError=true,  ValidatesOnExceptions=true}" IsReadOnly="True" />

        <Label Grid.Row="12" Grid.Column="0" Content="Total Expired:" />
        <!-- TextBox for Total Expired (ReadOnly) -->
        <TextBox Grid.Row="12" Grid.Column="1" Text="{Binding CurrentVolunteer.TotalExpired,
            Mode=TwoWay, NotifyOnValidationError=true,  ValidatesOnExceptions=true}" IsReadOnly="True" />

        <Label Grid.Row="13" Grid.Column="0" Content="In Progress:" />
        <!-- TextBox indicating if the Volunteer is in progress  -->
        <ScrollViewer Grid.Row="13" Grid.Column="1" Grid.RowSpan="3" VerticalScrollBarVisibility="Auto">
            <StackPanel>
                <StackPanel.Resources>
                    <Style TargetType="TextBlock">
                        <Setter Property="Margin" Value="0,2"/>
                        <Setter Property="TextWrapping" Value="Wrap"/>
                    </Style>
                </StackPanel.Resources>

                <TextBlock>
            <TextBlock Text="ID: " FontWeight="Bold"/>
            <TextBlock Text="{Binding CurrentVolunteer.IsProgress.Id}"/>
        </TextBlock>

                <TextBlock>
            <TextBlock Text="Call ID: " FontWeight="Bold"/>
            <TextBlock Text="{Binding CurrentVolunteer.IsProgress.CallId}"/>
        </TextBlock>

                <TextBlock>
            <TextBlock Text="Type: " FontWeight="Bold"/>
            <TextBlock Text="{Binding CurrentVolunteer.IsProgress.TheCallType}"/>
        </TextBlock>

                <TextBlock>
            <TextBlock Text="Description: " FontWeight="Bold"/>
            <TextBlock Text="{Binding CurrentVolunteer.IsProgress.VerbalDescription, TargetNullValue=N/A}"/>
        </TextBlock>

                <TextBlock>
            <TextBlock Text="Address: " FontWeight="Bold"/>
            <TextBlock Text="{Binding CurrentVolunteer.IsProgress.Address}"/>
        </TextBlock>

                <TextBlock>
            <TextBlock Text="Opening Time: " FontWeight="Bold"/>
            <TextBlock Text="{Binding CurrentVolunteer.IsProgress.OpeningTime}"/>
        </TextBlock>

                <TextBlock>
            <TextBlock Text="Max Time to End: " FontWeight="Bold"/>
            <TextBlock Text="{Binding CurrentVolunteer.IsProgress.MaxTimeToEnd, TargetNullValue=N/A}"/>
        </TextBlock>

                <TextBlock>
            <TextBlock Text="Entry Time: " FontWeight="Bold"/>
            <TextBlock Text="{Binding CurrentVolunteer.IsProgress.EntryTime}"/>
        </TextBlock>

                <TextBlock>
            <TextBlock Text="Distance: " FontWeight="Bold"/>
            <TextBlock Text="{Binding CurrentVolunteer.IsProgress.Distance, StringFormat={}{0} km}"/>
        </TextBlock>

                <TextBlock>
            <TextBlock Text="Status: " FontWeight="Bold"/>
            <TextBlock Text="{Binding CurrentVolunteer.IsProgress.status}"/>
        </TextBlock>
            </StackPanel>
        </ScrollViewer>
        <!-- Action Button for saving or updating volunteer details -->
        <Button Grid.Row="16" FontSize="13" Content="{Binding ButtonText}"  Click="ButtonAddUpdate_Click" 
        HorizontalAlignment="Left" Grid.ColumnSpan="2"  Command="{Binding SaveCommand}"  Grid.Column="1" Width="150" Height="40" />
    </Grid>
</Window>
